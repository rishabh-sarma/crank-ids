<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2022" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" compactdisplay="false" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" scientificx="true" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" historytimestamp="false" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1080" rtablesize="[10, 10]" useclientjvm="true" format="worksheet" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" trailingsemicolon="true" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode="  \012 with(qseries): with(crank): with(thetaids): with(ETA): \012  \012  cyc:=k-&gt;numtheory[cyclotomic](k,z); \012  cycroot:=k-&gt;RootOf(cyc(k,_X)=0): \012  cc:=(a,p)-&gt;cycroot(p)^modp(a,p) + cycroot(p)^(modp(-a,p)); \012  \012 xfac:=(a,p)-&gt;simplify(cc(3*a+(p+1)/2,p) - cc(3*a+(p-1)/2,p)); \012 xfac2:=(a,d,p)-&gt;simplify(cc(d*(3*a+(p+1)/2),p) - cc(d*(3*a+(p-1)/2),p)); \012################################################################################# \012  ## xfac2(a,d,p) =  4*(-1)^(d+1)*sin(Pi*d/p)*sin(6*a*d*Pi/p); \012## read prog2: \012##   checkxfac:=p-&gt;seq(seq([a,d,evalf(xfac2(a,d,p)-4*(-1)^(d+1)*sin(d*Pi/p)*sin(6*a*d*Pi/p),20)],a=1..p-1),d=1..p-1); \012## yak:=x-&gt;if abs(x[3])&lt;10^(-18) then [x[1],x[2],0] else x fi; \012## proc (x) options operator, arrow; if abs(x[3]) &lt; 1/1000000000000\134 \012##   000000 then [x[1], x[2], 0] else x end if end proc \012## yak2:=x-&gt;if abs(x[3])&lt;10^(-18) then 0 else x fi; \012## proc (x) options operator, arrow; if abs(x[3]) &lt; 1/1000000000000\134 \012##   000000 then 0 else x end if end proc \012## seq(convert(map(yak2,[checkxfac(p)]),set),p in [5,7,11,13,17]); \012##                     {0}, {0}, {0}, {0}, {0} \012##  \012################################################################################# \012  \012  chi12:=proc(n) \012     local m: \012     m:=modp(n,12); \012  if igcd(n,12)&gt;1 then \012  RETURN(0): \012  else \012     if m=1 or m=11 then \012  RETURN(1): \012     else \012  RETURN(-1): \012     fi: \012  fi: \012  end: \012  \012#----------------------------------------------------------- \012  s:=p-&gt;(p^2-1)/24: \012 Kpmd:=proc(p,m,d) \012   local x,n,k,x1,a1: \012   global  finda, _fbit1, _fbit2: \012   x1:=add(add(M(k,p,p*n+m-s(p))*cycroot(p)^(k*d),k=0..p-1)*q^n, \012           n=ceil( (s(p)-m)/p).. floor(  (_ctabmaxn-m+s(p))/p )): \012       x:=etaq(q,p,1000)*x1: \012 RETURN(x): \012 end: \012 \012#----------------------------------------------------------- \012 xfac:=(a,p)-&gt;simplify(cc(3*a+(p+1)/2,p) - cc(3*a+(p-1)/2,p)); \012 xfac2:=(a,d,p)-&gt;simplify(cc(d*(3*a+(p+1)/2),p) - cc(d*(3*a+(p-1)/2),p)); \012################################################################################# \012  ## xfac2(a,d,p) =  4*(-1)^(d+1)*sin(Pi*d/p)*sin(6*a*d*Pi/p); \012# DOING ALGORITHM STEPS IN MAPLE \012# 11-16-2021, 11-30-2021, 12-01-2021 \012# STEP 1 \012#  \012#  \012pirp:=proc(nv,r,p) \012  local n0,n1,piri,newn1,j,newnv,k: \012  n0:=nv[1]: \012  n1:=Array(1 .. (p-1)/2): for k from 1 to (p-1)/2 do n1[k]:=nv[k+1]: od: \012  piri:=(r1,i)-&gt;abs(mods(i/r1,p)): \012  newn1:=[seq(n1[piri(r,j)],j=1..(p-1)/2)]: \012  newnv:=[n0,op(newn1)]: \012RETURN(newnv): \012end: \012 \012#------------------------------------------------------------------------------- \012mult_nv_by_eta_quot:=proc(nv,p,j)  # multiply by  (eta(p*z)/eta(z))^j \012  local n0,newnv,k: \012  n0:=nv[1]: \012  newnv:=[n0 + j - j*(1 - (p-1)/2), seq(nv[k]-j,k=2..(p-1)/2+1)]: \012RETURN(newnv): \012end: \012#------------------------------------------------------------------------------- \012check_jpnz_modularity:=proc(p,m,n) \012   local s1,s2,s3,k: \012   #print(&quot;================================================&quot;); \012   #print(&quot;n=&quot;,n); \012   #print(&quot;================================================&quot;); \012   s1:=add(n[k],k=1..(p+1)/2): \012   s2:=n[1]+3*add(n[k],k=2..(p+1)/2): \012   s3:=add( (k-1)^2*n[k],k=2..(p+1)/2): \012   if s1=2 and modp(s2,24)=0 and modp(s3-2*m,p)=0 then \012      RETURN(true): \012   else \012      print(&quot;n=&quot;,n,&quot;s1=&quot;,s1,&quot;s2=&quot;,s2,&quot;=&quot;, modp(s2,24),&quot;mod 24&quot;,&quot;s3=&quot;,s3,modp(s3,p),&quot;modp p&quot;); \012      RETURN(false): \012   fi: \012end: \012#------------------------------------------------------------------------------- \012check_jpnz_modularity_no_detail:=proc(p,m,n) \012   local s1,s2,s3,k: \012   #print(&quot;================================================&quot;); \012   #print(&quot;n=&quot;,n); \012   #print(&quot;================================================&quot;); \012   s1:=add(n[k],k=1..(p+1)/2): \012   s2:=n[1]+3*add(n[k],k=2..(p+1)/2): \012   s3:=add( (k-1)^2*n[k],k=2..(p+1)/2): \012   if s1=2 and modp(s2,24)=0 and modp(s3-2*m,p)=0 then \012      RETURN(true): \012   else \012      RETURN(false): \012   fi: \012end: \012#------------------------------------------------------------------------------- \012 check_jpnz_modularity_details:=proc(p,m,n) \012   local s1,s2,s3,k: \012   s1:=add(n[k],k=1..(p+1)/2): \012   s2:=n[1]+3*add(n[k],k=2..(p+1)/2): \012   s3:=add( (k-1)^2*n[k],k=2..(p+1)/2): \012   if s1=2 and modp(s2,24)=0 and modp(s3-2*m,p)=0 then \012       \012     print(&quot;s1=&quot;,s1,&quot;s2=&quot;,s2,&quot;=&quot;, modp(s2,24),&quot;mod 24&quot;,&quot;s3=&quot;,s3,modp(s3,p),&quot;modp p&quot;); RETURN(true): \012   else \012      print(&quot;s1=&quot;,s1,&quot;s2=&quot;,s2,&quot;=&quot;, modp(s2,24),&quot;mod 24&quot;,&quot;s3=&quot;,s3,modp(s3,p),&quot;modp p&quot;); \012      RETURN(false): \012   fi: \012 end: \012#------------------------------------------------------------------------------- \012## # ================================================================================================== \012## # STEP 2 \012## #  \012## # Find ord at oo for each jpn(z) . \012n2jlist:=proc(p,n) \012  local JL,k,r: \012   #Converts n-vector to j-list \012   #j-list has form  [[p,k,r], ...... ] \012   # where [p,k,r] corresponds to JAC(k,p,infinity)^r \012  JL:=[]: \012  for k from 2 to (p+1)/2 do \012     r:=n[k]: \012     if r&lt;&gt;0 then \012        JL:=[op(JL),[p,k-1,r]]: \012     fi: \012  od: \012RETURN(JL): end: \012#----------------------------------------------------------- \012BordJterm:=(a,c,L)-&gt;Bord(L[1],L[2],a,c)*L[3]; \012#----------------------------------------------------------- \012BordJLIST:=(a,c,JL)-&gt;local L;add(BordJterm(a,c,L), L in JL); \012#----------------------------------------------------------- \012 ncuspord:=proc(p,n,a,c) \012    local ep,ord1,ord2: \012    #ncuspord(p,n,a,c)  calculates ord(jn,a/c) where jn=j(p,n,z) \012    ep:=eta(p*tau)^n[1]: \012    ord1:=BordJLIST(a,c,n2jlist(p,n)): \012    if c&lt;&gt;0 then \012      ord2:=cuspord(ep,a/c):  \012     else \012      ord2:=vetainf(ep): \012    fi: \012    RETURN(ord1+ord2): \012 end: \012 ncuspORD:=(p,n,a,c)-&gt;ncuspord(p,n,a,c)*cuspwid1(a,c,p): \012#----------------------------------------------------------- \012#BJL:=map(f-&gt;J2jaclist(subs(q=1,jac2J(f))), L3); \012#----------------------------------------------------------- \012 JLterm2n:=proc(p,JLT) \012   local n,n1,k,nk,n0:   \012   n0:=select(L-&gt;if nops(L)=2 then true else false fi, JLT): \012   if n0=[] then  \012     n:=[0]: \012   else \012     n1:=n0[1][2]:  #print(&quot;n1=&quot;,n1); \012     n:=[n1]: \012   fi: \012   for k from 2 to (p+1)/2 do \012     nk:=select(L-&gt;if L[2]=k-1 then true else false fi, JLT): #print(&quot;k=&quot;,k,&quot;nk=&quot;,nk); \012     if nk=[] then  \012       n:=[op(n),0]: \012     else \012       n:=[op(n),nk[1][3]]: \012     fi: \012   od: \012 RETURN(n): \012 end: \012#----------------------------------------------------------- \012 findlowordinfnvec:=proc(p,nLIST) \012   local k0,ordk0,k,ordk: \012   # RETURN k=k0 so that ord(nLIST[k0],oo) = min ord(nlist[k], oo) for k=1..lk \012   k0:=1:  ordk0:=ncuspord(p,nLIST[1],1,0): #print(&quot;k0 = &quot;,k0, &quot;ordk0 =&quot;,ordk0); \012   for k from 2 to nops(nLIST) do \012     ordk:=ncuspord(p,nLIST[k],1,0): \012     if ordk&lt;=ordk0 then \012        k0:=k: ordk0:=ordk: \012     fi: \012   od: \012   RETURN(k0); \012 end: \012#----------------------------------------------------------- \012nrat:=(n1,n2)-&gt;local k;[seq(n1[k]-n2[k],k=1..nops(n1))]; \012#----------------------------------------------------------- \012dividebyj0:=(nL,m)-&gt;local k;[seq(nrat(nL[k],nL[m]),k=1..nops(nL))]; \012#----------------------------------------------------------- \012 n2JAC:=proc(p,n) \012   local x,k,qpow: \012   x:=JAC(0,p,infinity)^n[1]: \012   x:=x*mul(JAC(k-1,p,infinity)^n[k],k=2..(p+1)/2): \012   qpow:=ncuspord(p,n,1,0): \012   RETURN(x*q^qpow): \012 end: \012#----------------------------------------------------------- \012 checkGamma1ModFunc:=proc(p,n) \012    local x,jprod,eprod,GL: \012    ## * Check that new n-vec is a mod func on GAMMA1[p]: \012    if convert(n,set)={0} then RETURN(true) else \012     jprod:=n2JAC(p,n): \012     eprod:=jac2eprod(jprod): \012     GL:=GETAP2getalist(eprod): \012     x:=Gamma1ModFunc(GL,p): \012     if x=1 then RETURN(true) else RETURN(false) fi: fi: end: \012#----------------------------------------------------------- \012 Lpms:=proc(p,m,s) \012      local x,n: \012      if s=0 then \012          if member(p,{11}) then x:=0 else x:=-1/24/p*(p-1)*(p-11): fi: \012      else \012          if numer(s)=1 then   \012             n:=denom(s): \012             if n&lt;p/2-(1/2)*(((2*p*p)+1)/3)^(0.5) then x:=-(1/2/p)*((p-1)*(p+1)/12+m*(m-p)): else x:=0: fi: \012           else \012              n:=numer(s): \012              x:=(p^2-1)/24/p:  \012            fi: \012      fi: \012 RETURN(x): \012 end: \012#----------------------------------------------------------- \012 KjLmps:=proc(p,m,s,n) \012    local x1,x2,a,c: \012     # \012     x1:=Lpms(p,m,s): \012     a:=numer(s): c:=denom(s): \012     x2:=ncuspord(p,n,a,c): \012     RETURN(x1-x2): \012 end: \012#----------------------------------------------------------- \012## # STEP 5 \012## # Calculate the constant B. \012 LHSRHScuspORDtable:=proc(p,m,k0,nL,newnL) \012 local b,symcusp,a,c,w,LORD,set2,RORD,LRORD,nv,n,cuspsp1,s; \012    b:=0: \012    cuspsp1:=cuspmake1(p): \012    print(&quot;TABLE  ORD lower bounds&quot;); \012    print(_cusp, _width, _ORD_LHS, _ORD_RHS,_ORD_LHS_minus_RHS); \012    if m&lt;&gt;0 then \012       n:=nL[k0]: \012       for symcusp in cuspsp1 do \012         if symcusp&lt;&gt;[1,0] then \012             a:=symcusp[1]: c:=symcusp[2]: \012   \009  w:=cuspwid1(a,c,p): \012             s:=a/c: \012   \009  LORD:=ceil(KjLmps(p,m,s,n)*w): \012       \009  set2:={seq(ncuspord(p,nv,a,c),nv in newnL)}: \012             RORD:=ceil(min(set2)*w): \012             LRORD:=ceil(min(LORD,RORD)): \012       \009  print(a/c, w, LORD,RORD, LRORD); \012         fi: \012       od: \012   else \012       for symcusp in cuspsp1 do \012         if symcusp&lt;&gt;[1,0] then \012             a:=symcusp[1]: c:=symcusp[2]: \012   \009  w:=cuspwid1(a,c,p): \012             s:=a/c: \012   \009  LORD:=ceil(Lpms(p,m,s)*w): \012       \009  set2:={seq(ncuspord(p,nv,a,c),nv in newnL)}: \012             RORD:=ceil(min(set2)*w): \012             LRORD:=ceil(min(LORD,RORD)): \012       \009  print(a/c, w, LORD,RORD, LRORD); \012         fi: \012       od: \012   fi: \012RETURN(): \012end: \012 \012#----------------------------------------------------------- \012 minord_LHSminusRHS_at_s:=proc(p,m,s,n,nL) \012    local set1,set2,set3,nv: \012    if m&lt;&gt;0 then \012      set1:={KjLmps(p,m,s,n)}: \012      set2:={seq(ncuspord(p,nv,numer(s),denom(s)),nv in nL)}: \012      set3:= set1 union set2: \012    else \012      set1:={Lpms(p,m,s)}: \012      set2:={seq(ncuspord(p,nv,numer(s),denom(s)),nv in nL)}: \012      set3:= set1 union set2: \012    fi: \012 RETURN(min(set3)); \012 end: \012#----------------------------------------------------------- \012 B_const:=proc(p,m,n,nL) \012    local cuspsp1,b,symcusp,a,c,minord: \012    cuspsp1:=cuspmake1(p): \012    b:=0: \012       for symcusp in cuspsp1 do \012         if symcusp&lt;&gt;[1,0] then \012             a:=symcusp[1]: c:=symcusp[2]: \012             minord:=minord_LHSminusRHS_at_s(p,m,a/c,n,nL): \012             b:=b + ceil(minord*cuspwid1(a,c,p)): \012          fi: \012       od: \012RETURN(b): \012end: \012#----------------------------------------------------------- \012BARGamma1Index:=proc(N) \012local primeDIVS,p,IND1,IND0,IND01: \012 #returns  the index  [barGamma(1) : barGamma[1](N)] \012 primeDIVS:=select(isprime,NumberTheory[Divisors](N)): \012 if N=2 then IND1:=6: else \012   IND1:=N^3/2*mul(1 - 1/p^2, p in primeDIVS): \012 fi: \012 IND0:=N*mul(1+1/p, p in primeDIVS): \012 if N=2 then IND01:=1: else \012    IND01:=NumberTheory[phi](N)/2: \012 fi: \012 RETURN(IND0*IND01): \012end: \012#----------------------------------------------------------- \012check_alg_step1:=proc(p,m,nL) \012  local logset,n: \012  # check that each jn-func correspoding to each nvec in nL \012  # satiesfies the modularity conditions of Theorem 5.1 \012  logset:={seq(check_jpnz_modularity(p,m,n), n in nL)}: \012  if logset={true} then \012     RETURN(true): \012  else \012     print(&quot;nL=&quot;,nL); \012     for n in nL do  \012     print(n, check_jpnz_modularity(p,m,n));               \012     od: \012     RETURN(false): \012  fi: \012end: \012 \012####################################################### \012check_alg_step2:=proc(p,m,nL) \012  local n,k0,newL,logset1; \012  k0:=findlowordinfnvec(p,nL): \012  #print(&quot;STEP 2: k0 = &quot;,k0); \012  newL:=dividebyj0(nL,k0): \012  logset1:=convert(map(nL-&gt;checkGamma1ModFunc(p,nL),newL), \012           set): \012  if logset1={true} then \012     RETURN(newL): \012  else \012     ERROR(&quot;STEP 2: some new n-vec is not a modfunc on GAMMA1[p]&quot;); \012  fi: \012end: \012 \012check_alg_step3:=proc(p,newL) \012  local CUSPSp,a,k: \012  # Table of ORDS at all cusps  for each func in newL  \012  CUSPSp:=[[1,0],[0,1],seq([1,k],k=2..(p-1)/2),seq([k,p],k=2..(p-1)/2)]: \012  print(&quot;CUSPS: &quot;,CUSPSp); \012  print(&quot;TABLE of ords&quot;);         \012  for a from 1 to nops(newL) do \012  ##print(seq(ncuspord(p,newL[a],CUSPSp[k][1],CUSPSp[k][2]),k=1..nops(CUSPSp))); \012  print(seq(ncuspORD(p,newL[a],CUSPSp[k][1],CUSPSp[k][2]),k=1..nops(CUSPSp))); \012  od: \012RETURN(): \012end: \012 \012#----------------------------------------------------------- \012#OLD \012##check_alg_step4:=proc(p,m,k0,nL) \012##  local CUSPSpA,cuspsp,s,k: \012##  CUSPSpA:=[[0,1],seq([1,k],k=2..(p-1)/2),seq([k,p],k=2..(p-1)/2)]: \012##  cuspsp:=map(L-&gt;L[1]/L[2],CUSPSpA): \012##  print(&quot;TABLE :&quot;); \012##  print(_cusp,_L(p,m,_cusp),_K(p,m,_cusp),_ceil(_K(p,m,_cusp))); \012##  for s in cuspsp do \012##  print(_s=s,_L=Lpms(p,m,s),_K=KjLmps(p,m,s,nL[k0]),_ceil(_K)=ceil(KjLmps(p,m,s,nL[k0]))); \012##  od: \012##RETURN(): \012##end: \012#----------------------------------------------------------- \012check_alg_step4:=proc(p,m,k0,nL) \012  local CUSPSpA,cuspsp,s,k: \012  CUSPSpA:=[[0,1],seq([1,k],k=2..(p-1)/2),seq([k,p],k=2..(p-1)/2)]: \012  cuspsp:=map(L-&gt;L[1]/L[2],CUSPSpA): \012  print(&quot;TABLE :&quot;); \012if m&lt;&gt;0 then \012  print(_cusp,_LOWER_BOUND_of_ORD,_Kpm/_j0,_at_cusp);                         \012  for s in cuspsp do \012  print(_cusp=s,_LOWER_BOUND=KjLmps(p,m,s,nL[k0])*cuspwid1(numer(s),denom(s),p)); \012  od: \012else \012  print(_cusp,_LOWER_BOUND_of_ORD,_Kpm,_at_cusp);                         \012  for s in cuspsp do \012  print(_cusp=s,_LOWER_BOUND=Lpms(p,m,s)*cuspwid1(numer(s),denom(s),p)); \012  od: \012fi: \012RETURN(): \012end: \012#----------------------------------------------------------- \012 \012check_alg_step5:=proc(p,m,k0,nL,newL,taboption) \012   local n,b: \012     if taboption then \012       LHSRHScuspORDtable(p,m,k0,nL,newL); \012     fi: \012     n:=nL[k0]: \012     b:=B_const(p,m,n,newL): \012RETURN(b): \012end: \012 \012 \012check_alg_step6:=proc(p,m,k0,nL,newL) \012 local symKpFL,relpm,k,relpq,topq,relpoly1,relpoly,BB; \012 local GAM1IND,j0qPOW: \012 global cofs,KpFL,altKp,j0q: \012 cofs:=Array(1..nops(newL)): \012 if m&lt;&gt;0 then \012    j0q:=jac2series(subs(q=1,n2JAC(p,nL[k0])),300): \012    j0qPOW:=m/p-ncuspord(p,nL[k0],1,0): \012    # print(&quot;j0qPOW = &quot;,j0qPOW); \012    altKp:=simplify(series(Kpmd(p,m,1)/j0q*q^j0qPOW,q,300)): \012 else \012    altKp:=simplify(series(Kpmd(p,m,1),q,300)): \012 fi: \012 #print(subs(cycroot(p)=zeta,simplify(series(altKp,q,5)))); \012 # not sure is &quot;q&quot; in denom is correct \012 symKpFL:=map(f-&gt;n2JAC(p,f),newL); \012 #print(_symKpFL=symKpFL); \012 KpFL:=map(f-&gt;series(jac2series(f,300),q,301),symKpFL): \012 relpm:=subs(cycroot(p)=zeta,findlincombo(altKp,KpFL,_J,q,0)); \012 print(&quot;Coefficients in CKpm identity&quot;); \012 for k from 1 to nops(KpFL) do \012 print(_k=k, coeff(relpm,_J[k],1)); \012 cofs[k]:=coeff(relpm,_J[k],1); \012 od:  \012 print(&quot;Proving and checking identity&quot;); \012 relpq:=subs({zeta=cycroot(p),seq(_J[k]=KpFL[k],k=1..nops(KpFL))},relpm): \012 topq:=floor(_ctabmaxn/p): \012 BB:=check_alg_step5(p,m,k0,nL,newL,false): \012 if topq &gt; -BB+1 then \012   relpoly1:=simplify(series(altKp-relpq,q,topq+1)): \012   relpoly:=convert(relpoly1,polynom): \012   #--------------------------------------------------------------------- \012   if relpoly=0 then \012     GAM1IND:=BARGamma1Index(p): \012     print(&quot;IDENTITY CHECKED AND PROVEN&quot;); \012     print(&quot;IDENTITY checked for &quot;,_O(q^(_topq+1))=_O(q^(topq+1))); \012     if m=0 then \012        printf(&quot;and _topq + 1 &gt; -_B + GAMMA1INDEX/12 = %a + %a = %a \134n&quot;, \012            -BB,GAM1IND/12,-BB+GAM1IND/12); \012     else \012        printf(&quot;and _topq + 1 &gt; -_B = %a \134n&quot;, \012            -BB); \012    fi: \012    RETURN(cofs): \012   fi: \012   #--------------------------------------------------------------------- \012 else \012   print(&quot;WARNING _topq too small&quot;); \012 fi: \012end: \012 \012#----------------------------------------------------------- \012#----------------------------------------------------------- \012##&gt; check_alg_step1(13,1,nL); \012##&gt; newnL:=check_alg_step2(13,1,nL); \012##&gt; check_alg_step3(13,newnL); \012##&gt; check_alg_step4(13,1,7,nL); \012##&gt; check_alg_step5(13,1,7,nL,newnL); \012##&gt; check_alg_step6(13,1,7,nL,newnL); \012##&gt; check_alg_step1(13,2,nLQR); \012##&gt; newnLQR:=check_alg_step2(13,2,nLQR); \012##&gt; check_alg_step3(13,newnLQR); \012##&gt; check_alg_step4(13,2,8,nLQR); \012##&gt; check_alg_step5(13,2,8,nLQR,newnLQR); \012##&gt; check_alg_step6(13,2,8,nLQR,newnLQR); \012##&gt; check_alg_step5(13,2,8,nLQR,newnLQR); \012##&gt; check_alg_step6(13,2,8,nLQR,newnLQR); \012do_alg_steps:=proc(p,m,nL) \012   local checkstep1,k0,BB; \012   global newnL: \012   if m&lt;&gt;0 then \012     printf(&quot;-------------------------------------------------\134n&quot;); \012     printf(&quot;STEP 1: check modularity \134n&quot;); \012     checkstep1:=check_alg_step1(p,m,nL): \012     if checkstep1 then \012        # OK \012        printf(&quot;        modularity checks\134n&quot;); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 2: find k0 and divide by j0\134n&quot;); \012          k0:=findlowordinfnvec(p,nL): \012        printf(&quot;        k0 = %a \134n&quot;,k0); \012          newnL:=check_alg_step2(p,m,nL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 3: Compute table of ORDS at all cusps for each func\134n&quot;); \012          check_alg_step3(p,newnL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 4: Compute LOWER BOUND for ORD of _Kpm/_j0 at each cusp\134n&quot;); \012          check_alg_step4(p,m,k0,nL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012      printf(&quot;STEP 5: Compile LHS vs RHS ORD table at cusps and find constant B\134n&quot;); \012          BB:=check_alg_step5(p,m,k0,nL,newnL,true); \012      printf(&quot;        This implies that B = %a \134n&quot;,BB); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 6: Prove and check identity\134n&quot;); \012           check_alg_step6(p,m,k0,nL,newnL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012     else \012        ERROR(&quot;Step 1 FAILED&quot;); \012     fi: \012   else \012     printf(&quot;-------------------------------------------------\134n&quot;); \012     printf(&quot;p = %a  and m = %a \134n&quot;,p,m); \012     printf(&quot;STEP 1: check modularity \134n&quot;); \012     checkstep1:=check_alg_step1(p,m,nL): \012     if checkstep1 then \012        # OK \012        printf(&quot;        modularity checks\134n&quot;); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 2: find k0 and divide by j0\134n&quot;); \012        printf(&quot;        We skip this step since m = 0\134n&quot;); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 3: Compute table of ORDS at all cusps for each func\134n&quot;); \012          check_alg_step3(p,nL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 4: Compute LOWER BOUND for ORD of _Kpm at each cusp\134n&quot;); \012          check_alg_step4(p,m,k0,nL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012    printf(&quot;STEP 5: Compile LHS vs RHS ORD table at cusps and find constant B\134n&quot;); \012           BB:=check_alg_step5(p,m,k0,nL,nL,true); \012           printf(&quot;        This implies that B = %a \134n&quot;,BB); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012        printf(&quot;STEP 6: Prove and check identity\134n&quot;); \012           check_alg_step6(p,m,k0,nL,nL); \012        printf(&quot;-------------------------------------------------\134n&quot;); \012     else \012        ERROR(&quot;Step 1 FAILED&quot;); \012     fi: \012  fi: \012end: \012#-------------------------------------------------------------------------------- \012sinrat:=(d,p)-&gt;evalf(sin(Pi/p)/sin(Pi*d/p)); \012vsinrat:=proc(d,p) \012   local x,z,a,s,k: \012   z:=cycroot(p): \012   ##z:=exp(2*Pi*I/p): \012   a:=modp(1/d,p): \012    if modp(d,2)=1 then x:=z^( (d-1)/2): else  x:=-z^(d/2 + (p-1)/2): fi: \012    s:=simplify(add(z^(d*k),k=0..(a-1))): \012RETURN(simplify(x*s)): \012end: \012evalfcheck:=x-&gt;if evalf(x)&lt;evalf(10^(-Digits+2)) then 0 else evalf((x)) fi; \012############################################################################## \012## for p in [11,13,17] do \012## print(p,{seq(evalfcheck(abs(sinrat(k,p)-vsinrat(k,p))),k=1..p-1)}); \012## od: \012## &gt; for p in [11,13,17] do \012## &gt; print(p,{seq(evalfcheck(abs(sinrat(k,p)-vsinrat(k,p))),k=1..p-1)}); \012## &gt; od: \012##                                      11, {0} \012##                                      13, {0} \012##                                      17, {0} \012############################################################################## \012#-------------------------------------------------------------------------------- \012 \012 rand5:=rand(1..5); \012 findnv:=proc(L) \012   local cfound,n1,n2,n3,n4,n5,n6,snv0,mm,mm0,nv,nv0,n0,r,mm12; \012   cfound:=0:  \012   while cfound=0 do \012     n1:=-rand5(): n2:=-rand5():n3:=-rand5():n4:=-rand5(): \012     n5:=-rand5():n6:=-rand5(): \012     nv0:=[n1,n2,n3,n4,n5,n6]:  \012     snv0:=convert(nv0,`+`):  \012     n0:=2-snv0: \012     nv:=[n0,op(nv0)]: \012     if check_jpnz_modularity_no_detail(13,0,nv) then  \012       mm:=min(seq(ncuspORD(13,pirp(nv,r,13),1,0),r=1..6)):  \012       if mm=L then   \012          mm0:=min(seq(ncuspORD(13,pirp(nv,r,13),0,1),r=1..6)):  \012          if mm0&gt;=-2 then  \012             mm12:=min(seq(ncuspORD(13,pirp(nv,r,13),1,2),r=1..6)):  \012             if mm12&gt;=-1 then  \012                #print(nv);  \012                cfound:=1: \012             fi: \012          fi: \012       fi: \012     fi:  \012  od:  \012  RETURN(nv);                                    \012  ##RETURN([seq(pirp(nv,r,19),r=1..9)]); \012end: \012#----------------------------------------------------------------- \012nvL2q:=proc(nvL,p,T) \012   local nvLq: \012    nvLq:=map(f-&gt;series(jac2series(n2JAC(p,f),T),q,T+1),nvL): \012RETURN(nvLq):  \012end: \012#----------------------------------------------------------------- \012pigenr:=(seed,p)-&gt;local r: [seq(pirp(seed,r,p),r=1..(p-1)/2)]: \012#----------------------------------------------------------------- \012findseeds:=proc() \012    local seed1, seed2, numfound: \012    numfound:=1: \012    seed1:=findnv(1): \012    #print(&quot;seed1=&quot;,seed1); \012    RETURN([seed1]): \012end: \012#seed1:=findnv(1): \012#seed2:=findnv(2): \012#seed3:=findnv(3):  \012#----------------------------------------------------------------- \012R13:=[seq(add((N(0,13,13*n+6)-N(k,13,13*n+6))*q^n,n=0..floor(_rtabmaxn/13)-1),k=1..6)]: \012C13:=[seq(add((M(0,13,13*n+6)-M(k,13,13*n+6))*q^n,n=0..floor(_ctabmaxn/13)-1),k=1..6)]: \012#----------------------------------------------------------------- \012RCFL:=map(f-&gt;series(f*etaq(q,13,1000)*q,q,501),C13): \012#----------------------------------------------------------------- \012plantseeds:=proc(seeds,muletapows,p) \012   local nvL,seed,nvs,bignvL,nvLj,L,j: \012   nvL:=[]: \012   for seed in seeds do \012      nvs:=pigenr(seed,p): \012      #print(&quot;seed=&quot;,seed,&quot;nvs=&quot;,nvs); \012      nvL:=[op(nvL),op(nvs)]: \012   od: \012   bignvL:=nvL: \012   #print(&quot;numa=&quot;,nops(nvL)); \012   for j in muletapows do \012       #print(&quot;j=&quot;,j); \012       nvLj:=map(L-&gt;mult_nv_by_eta_quot(L,p,j),nvL): \012       bignvL:=[op(bignvL),op(nvLj)]: \012   od: \012   RETURN(bignvL): \012end: \012#----------------------------------------------------------------- \012##BIGBAS:=plantseeds([seed1,seed2,seed3],[4,8],19): \012findnice:=proc(T) \012  local mx,mxset: \012  local fnice,c,myseeds,BIGBAS,num,badrel,m,relm,k,rmcofs,denoms; \012  global BIGBASq;\012  fnice:=0: \012  c:=0: \012  while fnice=0 and c&lt;T do \012myseeds:=findseeds(); \012print(&quot;myseeds=&quot;,myseeds); \012BIGBAS:=plantseeds(myseeds,[2],13): \012num:=nops(BIGBAS); \012BIGBASq:=nvL2q(BIGBAS,13,121):\012print(&quot;Num=&quot;,num); \012#----------------------------------------------------------------- \012mxset:={}: \012badrel:=0: \012for m from 1 to 6 do \012  relm:=findlincombo(RCFL[m],BIGBASq,[seq(_J[k],k=1..num)],q,0); \012  if relm=NULL then \012    badrel:=1: \012  else \012  rmcofs:={seq(coeff(relm,_J[k],1),k=1..num)}: \012  denoms:=map(x-&gt;abs(denom(x)),rmcofs): \012  mx:=max(op(denoms)): \012  print(&quot;m=&quot;,m,&quot;mx=&quot;,mx,relm); \012  mxset := mxset union {mx}: \012  fi: \012od: \012  print(&quot;mxset=&quot;,mxset); \012  if mxset={1} and badrel=0 then \012    fnice:=1: \012  fi: \012c:=c+1: \012od: \012print(&quot;myseeds=&quot;,myseeds); \012RETURN(myseeds); \012end: \012 \012#----------------------------------------------------------------- \012## &gt; findlincombo(RCFL[1],nvL4q,[seq(_J[k],k=1..72)],q,0); \012## bignvL:=[seq(pirp(seed1,r,19),r=1..9)]; \012## bignvLq:=map(f-&gt;series(jac2series(n2JAC(19,f),500),q,501),bignvL): \012## seed2:=[27, -2, -2, -4, -3, -3, -2, -2, -3, -4]: \012## bignvL2:=[seq(pirp(seed2,r,19),r=1..9)]; \012## bignvL3:=[op(bignvL),op(bignvL2)]: \012## bignvL3q:=map(f-&gt;series(jac2series(n2JAC(19,f),500),q,501),bignvL3): \012## findhommodp(bignvL3q,19,q,1,0); \012## R19:=[seq(add((N(0,19,19*n+4)-N(k,19,19*n+4))*q^n,n=0..floor(3000/19)-1),k=1..9)]: \012## C19:=[seq(add((M(0,19,19*n+4)-M(k,19,19*n+4))*q^n,n=0..floor(2000/19)-1),k=1..9)]: \012## RCFL:=map(f-&gt;series(f*etaq(q,19,1000)*q,q,501),R19): \012## for k from 1 to 9 do \012##   print(k,findhommodp([RCFL[k],op(bignvL3q)],19,q,1,0));  \012## od: \012##  \012## EP19:=series(q^3*(etaq(q,19,500)/etaq(q,1,500))^4,q,501): \012##  \012## nvL3q:=bignvL3q: \012##  \012##  nvL3Bq:=map(f-&gt;series(f*EP19,q,501),nvL3q): \012##  nvL3Cq:=map(f-&gt;series(f*EP19^2,q,501),nvL3q): \012##  nvL3Dq:=map(f-&gt;series(f*EP19^3,q,501),nvL3q): \012##  nvL3Eq:=map(f-&gt;series(f*EP19^4,q,501),nvL3q): \012##  nvL3Fq:=map(f-&gt;series(f*EP19^5,q,501),nvL3q): \012##  nvL3Gq:=map(f-&gt;series(f*EP19^6,q,501),nvL3q): \012##  \012## ##findhommodp([op(nvL3q),op(nvL3Bq),op(nvL3Cq),op(nvL3Dq),op(nvL3Eq)],19,q,1,0); \012##  \012##  BIGBAS:=[op(nvL3q),op(nvL3Bq),op(nvL3Cq)]: \012##  nops(BIGBAS); \012##  findlincombo(RCFL[1],BIGBAS,[seq(_J[k],k=1..nops(BIGBAS))],q,0); \012\012\012"/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group labelreference="L2069" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font underline="true" bold="true">FINDING AND PROVING AN IDENTITY FOR K^(C)[p,m] where p=13 and m=0</Font></Text-field>
</Input>
</Group>
<Group labelreference="L2067" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">This worksheet has <Font bold="true">Startup Code</Font></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L2072" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">myseeds:=[[15,-1,-3,-2,-2,-2,-3]];</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEobXlzZWVkc0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRlA2Ji1GIzYyLUkjbW5HRiQ2JFEjMTVGJ0Y5LUY2Ni1RIixGJ0Y5RjsvRj9GMUZARkJGREZGRkgvRktRJjAuMGVtRicvRk5RLDAuMzMzMzMzM2VtRictRlc2JFErJnVtaW51czA7MUYnRjlGWi1GVzYkUSsmdW1pbnVzMDszRidGOUZaLUZXNiRRKyZ1bWludXMwOzJGJ0Y5RlpGYm9GWkZib0ZaRl9vLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGOUZqb0ZdcEY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShteXNlZWRzR0YoNyM3KSIjOiEiIiEiJCEiI0YzRjNGMjcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L2070" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">BIGBAS:=plantseeds(myseeds,[],13):
nvL:=BIGBAS:
do_alg_steps(13,0,nvL);</Text-field>
</Input>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">-------------------------------------------------
p = 13  and m = 0 
STEP 1: check modularity 
        modularity checks
-------------------------------------------------
STEP 2: find k0 and divide by j0
        We skip this step since m = 0
-------------------------------------------------
STEP 3: Compute table of ORDS at all cusps for each func
</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbXNHRiQ2I1EoQ1VTUFM6fkYnLUkjbW9HRiQ2LVEoJmNvbW1hO0YnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdRJXRydWVGJy8lKXN0cmV0Y2h5R0Y4LyUqc3ltbWV0cmljR0Y4LyUobGFyZ2VvcEdGOC8lLm1vdmFibGVsaW1pdHNHRjgvJSdhY2NlbnRHRjgvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1JKG1mZW5jZWRHRiQ2Ji1GIzY8LUZNNiYtRiM2KC1JI21uR0YkNiRRIjFGJ0YzLUYwNi1RIixGJ0YzRjZGOUY8Rj5GQEZCRkRGRkZJLUZWNiRRIjBGJ0YzLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y4RjNGMy8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGWS1GTTYmLUYjNihGZm5GWUZVRmluRlxvRjNGM0Zeb0Zhb0ZZLUZNNiYtRiM2KEZVRlktRlY2JFEiMkYnRjNGaW5GXG9GM0YzRl5vRmFvRlktRk02Ji1GIzYoRlVGWS1GVjYkUSIzRidGM0ZpbkZcb0YzRjNGXm9GYW9GWS1GTTYmLUYjNihGVUZZLUZWNiRRIjRGJ0YzRmluRlxvRjNGM0Zeb0Zhb0ZZLUZNNiYtRiM2KEZVRlktRlY2JFEiNUYnRjNGaW5GXG9GM0YzRl5vRmFvRlktRk02Ji1GIzYoRlVGWS1GVjYkUSI2RidGM0ZpbkZcb0YzRjNGXm9GYW9GWS1GTTYmLUYjNihGXHBGWS1GVjYkUSMxM0YnRjNGaW5GXG9GM0YzRl5vRmFvRlktRk02Ji1GIzYoRmNwRllGX3JGaW5GXG9GM0YzRl5vRmFvRlktRk02Ji1GIzYoRmpwRllGX3JGaW5GXG9GM0YzRl5vRmFvRlktRk02Ji1GIzYoRmFxRllGX3JGaW5GXG9GM0YzRl5vRmFvRlktRk02Ji1GIzYoRmhxRllGX3JGaW5GXG9GM0YzRl5vRmFvRmluRlxvRjNGM0Zeb0Zhb0Yz">NiRRKENVU1BTOn42IjcuNyQiIiIiIiE3JEYoRic3JEYnIiIjNyRGJyIiJDckRiciIiU3JEYnIiImNyRGJyIiJzckRisiIzg3JEYtRjU3JEYvRjU3JEYxRjU3JEYzRjU=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1EuVEFCTEV+b2Z+b3Jkc0Yn">US5UQUJMRX5vZn5vcmRzNiI=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY6LUkjbW5HRiQ2JFEiM0YnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGTEYyRkxGMkZMRjJGTEYyRkxGMi1GLDYkUSIyRidGL0YyRitGMkZPRjJGT0YyLUYsNiRRIjFGJ0YvRi8=">Ni4iIiQhIiJGJEYkRiRGJEYkIiIjRiNGJUYlIiIi</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY6LUkjbW5HRiQ2JFEiMkYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGTEYyRkxGMkZMRjJGTEYyRkxGMkYrRjItRiw2JFEiMUYnRi9GMkYrRjItRiw2JFEiM0YnRi9GMkZSRi8=">Ni4iIiMhIiJGJEYkRiRGJEYkRiMiIiJGIyIiJEYm</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY6LUkjbW5HRiQ2JFEiM0YnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGTEYyRkxGMkZMRjJGTEYyRkxGMi1GLDYkUSIxRidGL0YyLUYsNiRRIjJGJ0YvRjJGK0YyRlJGMkZSRi8=">Ni4iIiQhIiJGJEYkRiRGJEYkIiIiIiIjRiNGJkYm</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY6LUkjbW5HRiQ2JFEiMkYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGTEYyRkxGMkZMRjJGTEYyRkxGMkYrRjItRiw2JFEiM0YnRi9GMkZPRjItRiw2JFEiMUYnRi9GMkYrRi8=">Ni4iIiMhIiJGJEYkRiRGJEYkRiMiIiRGJSIiIkYj</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY6LUkjbW5HRiQ2JFEiMkYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGTEYyRkxGMkZMRjJGTEYyRkxGMi1GLDYkUSIzRidGL0YyRitGMi1GLDYkUSIxRidGL0YyRk9GMkYrRi8=">Ni4iIiMhIiJGJEYkRiRGJEYkIiIkRiMiIiJGJUYj</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY6LUkjbW5HRiQ2JFEiMUYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGTEYyRkxGMkZMRjJGTEYyRkxGMi1GLDYkUSIzRidGL0YyLUYsNiRRIjJGJ0YvRjJGUkYyRlJGMkZPRi8=">Ni4iIiIhIiJGJEYkRiRGJEYkIiIkIiIjRiZGJkYl</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">-------------------------------------------------
STEP 4: Compute LOWER BOUND for ORD of _Kpm at each cusp
</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1EoVEFCTEV+OkYn">UShUQUJMRX46NiI=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JVEmX2N1c3BGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSgmY29tbWE7RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiVRNF9MT1dFUl9CT1VORF9vZl9PUkRGJ0YvRjJGNS1GLDYlUSVfS3BtRidGL0YyRjUtRiw2JVEpX2F0X2N1c3BGJ0YvRjJGOQ==">NiZJJl9jdXNwRzYiSTRfTE9XRVJfQk9VTkRfb2ZfT1JER0YkSSVfS3BtR0YkSSlfYXRfY3VzcEdGJA==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSIwRidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2Ji1GLjYlUS1fTE9XRVJfQk9VTkRGJ0YxRjRGNy1GUjYkUSsmdW1pbnVzMDsxRidGO0Y7Rjs=">NiQvSSZfY3VzcEc2IiIiIS9JLV9MT1dFUl9CT1VOREdGJSEiIg==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiMUYnRjstRlU2JFEiMkYnRjsvJS5saW5ldGhpY2tuZXNzR0ZXLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmluLyUpYmV2ZWxsZWRHRj9GOy1GODYtUSgmY29tbWE7RidGO0Y9L0ZBRjNGQkZERkZGSEZKL0ZNUSYwLjBlbUYnL0ZQUSwwLjMzMzMzMzNlbUYnLUYjNiYtRi42JVEtX0xPV0VSX0JPVU5ERidGMUY0RjctRlU2JFEiMEYnRjtGO0Y7">NiQvSSZfY3VzcEc2IiMiIiIiIiMvSS1fTE9XRVJfQk9VTkRHRiUiIiE=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiMUYnRjstRlU2JFEiM0YnRjsvJS5saW5ldGhpY2tuZXNzR0ZXLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmluLyUpYmV2ZWxsZWRHRj9GOy1GODYtUSgmY29tbWE7RidGO0Y9L0ZBRjNGQkZERkZGSEZKL0ZNUSYwLjBlbUYnL0ZQUSwwLjMzMzMzMzNlbUYnLUYjNiYtRi42JVEtX0xPV0VSX0JPVU5ERidGMUY0RjctRlU2JFEiMEYnRjtGO0Y7">NiQvSSZfY3VzcEc2IiMiIiIiIiQvSS1fTE9XRVJfQk9VTkRHRiUiIiE=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiMUYnRjstRlU2JFEiNEYnRjsvJS5saW5ldGhpY2tuZXNzR0ZXLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmluLyUpYmV2ZWxsZWRHRj9GOy1GODYtUSgmY29tbWE7RidGO0Y9L0ZBRjNGQkZERkZGSEZKL0ZNUSYwLjBlbUYnL0ZQUSwwLjMzMzMzMzNlbUYnLUYjNiYtRi42JVEtX0xPV0VSX0JPVU5ERidGMUY0RjctRlU2JFEiMEYnRjtGO0Y7">NiQvSSZfY3VzcEc2IiMiIiIiIiUvSS1fTE9XRVJfQk9VTkRHRiUiIiE=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiMUYnRjstRlU2JFEiNUYnRjsvJS5saW5ldGhpY2tuZXNzR0ZXLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmluLyUpYmV2ZWxsZWRHRj9GOy1GODYtUSgmY29tbWE7RidGO0Y9L0ZBRjNGQkZERkZGSEZKL0ZNUSYwLjBlbUYnL0ZQUSwwLjMzMzMzMzNlbUYnLUYjNiYtRi42JVEtX0xPV0VSX0JPVU5ERidGMUY0RjctRlU2JFEiMEYnRjtGO0Y7">NiQvSSZfY3VzcEc2IiMiIiIiIiYvSS1fTE9XRVJfQk9VTkRHRiUiIiE=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiMUYnRjstRlU2JFEiNkYnRjsvJS5saW5ldGhpY2tuZXNzR0ZXLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmluLyUpYmV2ZWxsZWRHRj9GOy1GODYtUSgmY29tbWE7RidGO0Y9L0ZBRjNGQkZERkZGSEZKL0ZNUSYwLjBlbUYnL0ZQUSwwLjMzMzMzMzNlbUYnLUYjNiYtRi42JVEtX0xPV0VSX0JPVU5ERidGMUY0RjctRlU2JFEiMEYnRjtGO0Y7">NiQvSSZfY3VzcEc2IiMiIiIiIicvSS1fTE9XRVJfQk9VTkRHRiUiIiE=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiMkYnRjstRlU2JFEjMTNGJ0Y7LyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zqbi8lKWJldmVsbGVkR0Y/RjstRjg2LVEoJmNvbW1hO0YnRjtGPS9GQUYzRkJGREZGRkhGSi9GTVEmMC4wZW1GJy9GUFEsMC4zMzMzMzMzZW1GJy1GIzYmLUYuNiVRLV9MT1dFUl9CT1VOREYnRjFGNEY3LUZSNigtRlU2JFEiN0YnRjtGWEZlbkZobkZbb0Zdb0Y7Rjs=">NiQvSSZfY3VzcEc2IiMiIiMiIzgvSS1fTE9XRVJfQk9VTkRHRiUjIiIoRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiM0YnRjstRlU2JFEjMTNGJ0Y7LyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zqbi8lKWJldmVsbGVkR0Y/RjstRjg2LVEoJmNvbW1hO0YnRjtGPS9GQUYzRkJGREZGRkhGSi9GTVEmMC4wZW1GJy9GUFEsMC4zMzMzMzMzZW1GJy1GIzYmLUYuNiVRLV9MT1dFUl9CT1VOREYnRjFGNEY3LUZSNigtRlU2JFEiN0YnRjtGWEZlbkZobkZbb0Zdb0Y7Rjs=">NiQvSSZfY3VzcEc2IiMiIiQiIzgvSS1fTE9XRVJfQk9VTkRHRiUjIiIoRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiNEYnRjstRlU2JFEjMTNGJ0Y7LyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zqbi8lKWJldmVsbGVkR0Y/RjstRjg2LVEoJmNvbW1hO0YnRjtGPS9GQUYzRkJGREZGRkhGSi9GTVEmMC4wZW1GJy9GUFEsMC4zMzMzMzMzZW1GJy1GIzYmLUYuNiVRLV9MT1dFUl9CT1VOREYnRjFGNEY3LUZSNigtRlU2JFEiN0YnRjtGWEZlbkZobkZbb0Zdb0Y7Rjs=">NiQvSSZfY3VzcEc2IiMiIiUiIzgvSS1fTE9XRVJfQk9VTkRHRiUjIiIoRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiNUYnRjstRlU2JFEjMTNGJ0Y7LyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zqbi8lKWJldmVsbGVkR0Y/RjstRjg2LVEoJmNvbW1hO0YnRjtGPS9GQUYzRkJGREZGRkhGSi9GTVEmMC4wZW1GJy9GUFEsMC4zMzMzMzMzZW1GJy1GIzYmLUYuNiVRLV9MT1dFUl9CT1VOREYnRjFGNEY3LUZSNigtRlU2JFEiN0YnRjtGWEZlbkZobkZbb0Zdb0Y7Rjs=">NiQvSSZfY3VzcEc2IiMiIiYiIzgvSS1fTE9XRVJfQk9VTkRHRiUjIiIoRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSZfY3VzcEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSZtZnJhY0dGJDYoLUkjbW5HRiQ2JFEiNkYnRjstRlU2JFEjMTNGJ0Y7LyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zqbi8lKWJldmVsbGVkR0Y/RjstRjg2LVEoJmNvbW1hO0YnRjtGPS9GQUYzRkJGREZGRkhGSi9GTVEmMC4wZW1GJy9GUFEsMC4zMzMzMzMzZW1GJy1GIzYmLUYuNiVRLV9MT1dFUl9CT1VOREYnRjFGNEY3LUZSNigtRlU2JFEiN0YnRjtGWEZlbkZobkZbb0Zdb0Y7Rjs=">NiQvSSZfY3VzcEc2IiMiIiciIzgvSS1fTE9XRVJfQk9VTkRHRiUjIiIoRig=</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">-------------------------------------------------
STEP 5: Compile LHS vs RHS ORD table at cusps and find constant B
</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1E4VEFCTEV+fk9SRH5sb3dlcn5ib3VuZHNGJw==">UThUQUJMRX5+T1JEfmxvd2VyfmJvdW5kczYi</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkjbWlHRiQ2JVEmX2N1c3BGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSgmY29tbWE7RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiVRJ193aWR0aEYnRi9GMkY1LUYsNiVRKV9PUkRfTEhTRidGL0YyRjUtRiw2JVEpX09SRF9SSFNGJ0YvRjJGNS1GLDYlUTNfT1JEX0xIU19taW51c19SSFNGJ0YvRjJGOQ==">NidJJl9jdXNwRzYiSSdfd2lkdGhHRiRJKV9PUkRfTEhTR0YkSSlfT1JEX1JIU0dGJEkzX09SRF9MSFNfbWludXNfUkhTR0Yk</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkjbW5HRiQ2JFEiMEYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRIzEzRidGL0YyLUYsNiRRKyZ1bWludXMwOzFGJ0YvRjJGT0YyRk9GLw==">NiciIiEiIzghIiJGJUYl</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjFGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEiMkYnRjIvJS5saW5ldGhpY2tuZXNzR0YxLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRjwvJSliZXZlbGxlZEdRJmZhbHNlRictSSNtb0dGJDYtUSgmY29tbWE7RidGMi8lJmZlbmNlR0ZBLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRkEvJSpzeW1tZXRyaWNHRkEvJShsYXJnZW9wR0ZBLyUubW92YWJsZWxpbWl0c0dGQS8lJ2FjY2VudEdGQS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiRRIzEzRidGMkZCLUYvNiRRIjBGJ0YyRkItRi82JFErJnVtaW51czA7MUYnRjJGQkZbb0Yy">NicjIiIiIiIjIiM4IiIhISIiRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjFGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEiM0YnRjIvJS5saW5ldGhpY2tuZXNzR0YxLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRjwvJSliZXZlbGxlZEdRJmZhbHNlRictSSNtb0dGJDYtUSgmY29tbWE7RidGMi8lJmZlbmNlR0ZBLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRkEvJSpzeW1tZXRyaWNHRkEvJShsYXJnZW9wR0ZBLyUubW92YWJsZWxpbWl0c0dGQS8lJ2FjY2VudEdGQS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiRRIzEzRidGMkZCLUYvNiRRIjBGJ0YyRkItRi82JFErJnVtaW51czA7MUYnRjJGQkZbb0Yy">NicjIiIiIiIkIiM4IiIhISIiRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjFGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEiNEYnRjIvJS5saW5ldGhpY2tuZXNzR0YxLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRjwvJSliZXZlbGxlZEdRJmZhbHNlRictSSNtb0dGJDYtUSgmY29tbWE7RidGMi8lJmZlbmNlR0ZBLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRkEvJSpzeW1tZXRyaWNHRkEvJShsYXJnZW9wR0ZBLyUubW92YWJsZWxpbWl0c0dGQS8lJ2FjY2VudEdGQS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiRRIzEzRidGMkZCLUYvNiRRIjBGJ0YyRkItRi82JFErJnVtaW51czA7MUYnRjJGQkZbb0Yy">NicjIiIiIiIlIiM4IiIhISIiRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjFGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEiNUYnRjIvJS5saW5ldGhpY2tuZXNzR0YxLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRjwvJSliZXZlbGxlZEdRJmZhbHNlRictSSNtb0dGJDYtUSgmY29tbWE7RidGMi8lJmZlbmNlR0ZBLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRkEvJSpzeW1tZXRyaWNHRkEvJShsYXJnZW9wR0ZBLyUubW92YWJsZWxpbWl0c0dGQS8lJ2FjY2VudEdGQS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiRRIzEzRidGMkZCLUYvNiRRIjBGJ0YyRkItRi82JFErJnVtaW51czA7MUYnRjJGQkZbb0Yy">NicjIiIiIiImIiM4IiIhISIiRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjFGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEiNkYnRjIvJS5saW5ldGhpY2tuZXNzR0YxLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRjwvJSliZXZlbGxlZEdRJmZhbHNlRictSSNtb0dGJDYtUSgmY29tbWE7RidGMi8lJmZlbmNlR0ZBLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRkEvJSpzeW1tZXRyaWNHRkEvJShsYXJnZW9wR0ZBLyUubW92YWJsZWxpbWl0c0dGQS8lJ2FjY2VudEdGQS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYvNiRRIzEzRidGMkZCLUYvNiRRIjBGJ0YyRkItRi82JFErJnVtaW51czA7MUYnRjJGQkZbb0Yy">NicjIiIiIiInIiM4IiIhISIiRig=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjJGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEjMTNGJ0YyLyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Y9LyUpYmV2ZWxsZWRHUSZmYWxzZUYnLUkjbW9HRiQ2LVEoJmNvbW1hO0YnRjIvJSZmZW5jZUdGQi8lKnNlcGFyYXRvckdRJXRydWVGJy8lKXN0cmV0Y2h5R0ZCLyUqc3ltbWV0cmljR0ZCLyUobGFyZ2VvcEdGQi8lLm1vdmFibGVsaW1pdHNHRkIvJSdhY2NlbnRHRkIvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GLzYkRjpGMkZDRmZuRkNGZm5GQ0ZmbkYy">NicjIiIjIiM4IiIiRiZGJkYm</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjNGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEjMTNGJ0YyLyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Y9LyUpYmV2ZWxsZWRHUSZmYWxzZUYnLUkjbW9HRiQ2LVEoJmNvbW1hO0YnRjIvJSZmZW5jZUdGQi8lKnNlcGFyYXRvckdRJXRydWVGJy8lKXN0cmV0Y2h5R0ZCLyUqc3ltbWV0cmljR0ZCLyUobGFyZ2VvcEdGQi8lLm1vdmFibGVsaW1pdHNHRkIvJSdhY2NlbnRHRkIvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GLzYkRjpGMkZDRmZuRkNGZm5GQ0ZmbkYy">NicjIiIkIiM4IiIiRiZGJkYm</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjRGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEjMTNGJ0YyLyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Y9LyUpYmV2ZWxsZWRHUSZmYWxzZUYnLUkjbW9HRiQ2LVEoJmNvbW1hO0YnRjIvJSZmZW5jZUdGQi8lKnNlcGFyYXRvckdRJXRydWVGJy8lKXN0cmV0Y2h5R0ZCLyUqc3ltbWV0cmljR0ZCLyUobGFyZ2VvcEdGQi8lLm1vdmFibGVsaW1pdHNHRkIvJSdhY2NlbnRHRkIvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GLzYkRjpGMkZDRmZuRkNGZm5GQ0ZmbkYy">NicjIiIlIiM4IiIiRiZGJkYm</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjVGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEjMTNGJ0YyLyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Y9LyUpYmV2ZWxsZWRHUSZmYWxzZUYnLUkjbW9HRiQ2LVEoJmNvbW1hO0YnRjIvJSZmZW5jZUdGQi8lKnNlcGFyYXRvckdRJXRydWVGJy8lKXN0cmV0Y2h5R0ZCLyUqc3ltbWV0cmljR0ZCLyUobGFyZ2VvcEdGQi8lLm1vdmFibGVsaW1pdHNHRkIvJSdhY2NlbnRHRkIvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GLzYkRjpGMkZDRmZuRkNGZm5GQ0ZmbkYy">NicjIiImIiM4IiIiRiZGJkYm</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkmbWZyYWNHRiQ2KC1JI21uR0YkNiRRIjZGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRi82JFEjMTNGJ0YyLyUubGluZXRoaWNrbmVzc0dRIjFGJy8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Y9LyUpYmV2ZWxsZWRHUSZmYWxzZUYnLUkjbW9HRiQ2LVEoJmNvbW1hO0YnRjIvJSZmZW5jZUdGQi8lKnNlcGFyYXRvckdRJXRydWVGJy8lKXN0cmV0Y2h5R0ZCLyUqc3ltbWV0cmljR0ZCLyUobGFyZ2VvcEdGQi8lLm1vdmFibGVsaW1pdHNHRkIvJSdhY2NlbnRHRkIvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GLzYkRjpGMkZDRmZuRkNGZm5GQ0ZmbkYy">NicjIiInIiM4IiIiRiZGJkYm</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">        This implies that B = -1 
-------------------------------------------------
STEP 6: Prove and check identity
</Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1E+Q29lZmZpY2llbnRzfmlufkNLcG1+aWRlbnRpdHlGJw==">UT5Db2VmZmljaWVudHN+aW5+Q0twbX5pZGVudGl0eTYi</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSNfa0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSIxRidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2NC1GIzYmLUZSNiRRIjJGJ0Y7LUY4Ni1RMSZJbnZpc2libGVUaW1lcztGJ0Y7Rj1GQEZCRkRGRkZIRkpGWS9GUEZaLUklbXN1cEdGJDYlLUYuNiVRJXpldGFGJy9GMkY/RjstRlI2JFEjMTFGJ0Y7LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJ0Y7LUY4Ni1RJyZwbHVzO0YnRjtGPUZARkJGREZGRkhGSi9GTVEsMC4yMjIyMjIyZW1GJy9GUEZjcC1GY282JUZlby1GUjYkUSI5RidGO0ZccEZfcC1GY282JUZlby1GUjYkUSI4RidGO0ZccEZfcC1GY282JUZlby1GUjYkUSI3RidGO0ZccEZfcC1GY282JUZlby1GUjYkUSI2RidGO0ZccEZfcC1GY282JUZlby1GUjYkUSI1RidGO0ZccEZfcC1GY282JUZlby1GUjYkUSI0RidGO0ZccEZfcC1GIzYmRltvRl5vLUZjbzYlRmVvRltvRlxwRjtGX3BGW29GO0Y7">NiQvSSNfa0c2IiIiIiw0KiYiIiNGJilJJXpldGFHRiUiIzZGJkYmKiQpRisiIipGJkYmKiQpRisiIilGJkYmKiQpRisiIihGJkYmKiQpRisiIidGJkYmKiQpRisiIiZGJkYmKiQpRisiIiVGJkYmKiZGKUYmKUYrRilGJkYmRilGJg==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSNfa0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSIyRidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2Ly1GODYtUSomdW1pbnVzMDtGJ0Y7Rj1GQEZCRkRGRkZIRkovRk1RLDAuMjIyMjIyMmVtRicvRlBGXW8tSSVtc3VwR0YkNiUtRi42JVElemV0YUYnL0YyRj9GOy1GUjYkUSMxMUYnRjsvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLUY4Ni1RKCZtaW51cztGJ0Y7Rj1GQEZCRkRGRkZIRkpGXG9GXm8tRmBvNiVGYm8tRlI2JFEjMTBGJ0Y7RmlvRlxwLUZgbzYlRmJvLUZSNiRRIjdGJ0Y7RmlvRlxwLUZgbzYlRmJvLUZSNiRRIjZGJ0Y7RmlvRlxwLUZgbzYlRmJvLUZSNiRRIjNGJ0Y7RmlvRlxwLUZgbzYlRmJvRlFGaW9GO0Y7">NiQvSSNfa0c2IiIiIywuKiQpSSV6ZXRhR0YlIiM2IiIiISIiKiQpRioiIzVGLEYtKiQpRioiIihGLEYtKiQpRioiIidGLEYtKiQpRioiIiRGLEYtKiQpRipGJkYsRi0=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSNfa0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSIzRidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2NC1JJW1zdXBHRiQ2JS1GLjYlUSV6ZXRhRicvRjJGP0Y7LUZSNiRRIzExRidGOy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRictRjg2LVEnJnBsdXM7RidGO0Y9RkBGQkZERkZGSEZKL0ZNUSwwLjIyMjIyMjJlbUYnL0ZQRmpvLUZqbjYlRlxvLUZSNiRRIzEwRidGO0Zjb0Zmby1Gam42JUZcby1GUjYkUSI5RidGO0Zjb0Zmby1Gam42JUZcby1GUjYkUSI4RidGO0Zjb0Zmby1Gam42JUZcby1GUjYkUSI1RidGO0Zjb0Zmby1Gam42JUZcby1GUjYkUSI0RidGO0Zjb0Zmby1Gam42JUZcb0ZRRmNvRmZvLUZqbjYlRlxvLUZSNiRRIjJGJ0Y7RmNvRmZvLUZSNiRRIjFGJ0Y7RjtGOw==">NiQvSSNfa0c2IiIiJCw0KiQpSSV6ZXRhR0YlIiM2IiIiRiwqJClGKiIjNUYsRiwqJClGKiIiKkYsRiwqJClGKiIiKUYsRiwqJClGKiIiJkYsRiwqJClGKiIiJUYsRiwqJClGKkYmRixGLCokKUYqIiIjRixGLEYsRiw=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSNfa0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSI0RidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2MC1JJW1zdXBHRiQ2JS1GLjYlUSV6ZXRhRicvRjJGP0Y7LUZSNiRRIzEwRidGOy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRictRjg2LVEoJm1pbnVzO0YnRjtGPUZARkJGREZGRkhGSi9GTVEsMC4yMjIyMjIyZW1GJy9GUEZqby1Gam42JUZcby1GUjYkUSI5RidGO0Zjby1GODYtUScmcGx1cztGJ0Y7Rj1GQEZCRkRGRkZIRkpGaW9GW3AtRmpuNiVGXG8tRlI2JFEiOEYnRjtGY29GYXAtRmpuNiVGXG8tRlI2JFEiNUYnRjtGY29GZm8tRmpuNiVGXG9GUUZjb0ZhcC1Gam42JUZcby1GUjYkUSIzRidGO0Zjb0ZhcC1GUjYkUSIxRidGO0Y7Rjs=">NiQvSSNfa0c2IiIiJSwwKiQpSSV6ZXRhR0YlIiM1IiIiRiwqJClGKiIiKkYsISIiKiQpRioiIilGLEYsKiQpRioiIiZGLEYsKiQpRipGJkYsRjAqJClGKiIiJEYsRixGLEYs</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSNfa0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSI1RidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2MS1GODYtUSomdW1pbnVzMDtGJ0Y7Rj1GQEZCRkRGRkZIRkovRk1RLDAuMjIyMjIyMmVtRicvRlBGXW8tSSVtc3VwR0YkNiUtRi42JVElemV0YUYnL0YyRj9GOy1GUjYkUSMxMEYnRjsvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLUY4Ni1RKCZtaW51cztGJ0Y7Rj1GQEZCRkRGRkZIRkpGXG9GXm8tRmBvNiVGYm8tRlI2JFEiOUYnRjtGaW9GXHAtRmBvNiVGYm8tRlI2JFEiN0YnRjtGaW9GXHAtRmBvNiVGYm8tRlI2JFEiNkYnRjtGaW9GXHAtRmBvNiVGYm8tRlI2JFEiNEYnRjtGaW9GXHAtRmBvNiVGYm8tRlI2JFEiM0YnRjtGaW9GXHAtRlI2JFEiMkYnRjtGO0Y7">NiQvSSNfa0c2IiIiJiwwKiQpSSV6ZXRhR0YlIiM1IiIiISIiKiQpRioiIipGLEYtKiQpRioiIihGLEYtKiQpRioiIidGLEYtKiQpRioiIiVGLEYtKiQpRioiIiRGLEYtIiIjRi0=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUYjNiYtSSNtaUdGJDYlUSNfa0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZlcXVhbHM7RicvRjVRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk4tSSNtbkdGJDYkUSI2RidGO0Y7LUY4Ni1RKCZjb21tYTtGJ0Y7Rj0vRkFGM0ZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBRLDAuMzMzMzMzM2VtRictRiM2Jy1GODYtUSomdW1pbnVzMDtGJ0Y7Rj1GQEZCRkRGRkZIRkovRk1RLDAuMjIyMjIyMmVtRicvRlBGXW8tSSVtc3VwR0YkNiUtRi42JVElemV0YUYnL0YyRj9GOy1GUjYkUSI4RidGOy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRictRjg2LVEoJm1pbnVzO0YnRjtGPUZARkJGREZGRkhGSkZcb0Zeby1GYG82JUZiby1GUjYkUSI1RidGO0Zpb0Y7Rjs=">NiQvSSNfa0c2IiIiJywmKiQpSSV6ZXRhR0YlIiIpIiIiISIiKiQpRioiIiZGLEYt</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1E+UHJvdmluZ35hbmR+Y2hlY2tpbmd+aWRlbnRpdHlGJw==">UT5Qcm92aW5nfmFuZH5jaGVja2luZ35pZGVudGl0eTYi</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkjbXNHNiMvSSttb2R1bGVuYW1lRzYiSSxUeXBlc2V0dGluZ0dJKF9zeXNsaWJHRic2I1E8SURFTlRJVFl+Q0hFQ0tFRH5BTkR+UFJPVkVORic=">UTxJREVOVElUWX5DSEVDS0VEfkFORH5QUk9WRU42Ig==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbXNHRiQ2I1E2SURFTlRJVFl+Y2hlY2tlZH5mb3J+RictSSNtb0dGJDYtUSgmY29tbWE7RicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYjNiYtRiM2Ji1JI21pR0YkNiVRI19PRicvJSdpdGFsaWNHRjsvRjRRJ2l0YWxpY0YnLUYwNi1RMCZBcHBseUZ1bmN0aW9uO0YnRjNGNi9GOkY4RjxGPkZARkJGREZGL0ZKRkgtSShtZmVuY2VkR0YkNiQtRiM2Ji1JJW1zdXBHRiQ2JS1GUTYlUSJxRidGVEZWLUYjNiYtRlE2JVEmX3RvcHFGJ0ZURlYtRjA2LVEnJnBsdXM7RidGM0Y2RmVuRjxGPkZARkJGRC9GR1EsMC4yMjIyMjIyZW1GJy9GSkZbcC1JI21uR0YkNiRRIjFGJ0YzRjMvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y4RjNGM0YzLUYwNi1RKSZlcXVhbHM7RidGM0Y2RmVuRjxGPkZARkJGRC9GR1EsMC4yNzc3Nzc4ZW1GJy9GSkZdcS1GIzYmRlBGWC1GaG42JC1GIzYmLUZdbzYlRl9vLUZecDYkUSQxNTRGJ0YzRmFwRmRwRmdwRjNGM0YzRjNGMw==">NiRRNklERU5USVRZfmNoZWNrZWR+Zm9yfjYiLy1JI19PR0YkNiMpSSJxR0YkLCZJJl90b3BxR0YkIiIiRi1GLS1GJzYjKiQpRioiJGEiRi0=</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">and _topq + 1 &gt; -_B + GAMMA1INDEX/12 = 1 + 7 = 8 
-------------------------------------------------
</Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L2064" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">for k from 1 to 6 do</Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" spaceabove="0" linebreak="space" rightmargin="0" linespacing="0.0" initial="0" firstindent="0" leftmargin="0" bulletsuffix="" alignment="left" bullet="none" spacebelow="0" pagebreak-before="false">  ck:=content(cofs[k],zeta): if ck=1 then print(_c[k]=cofs[k]); else  ifacs:=ifactors(ck): xx:=ifacs[2]: if nops(xx)=1 then p:=xx[1][1]: j:=xx[1][2]: print(_c[k]=cat(_,p)^j*expand(cofs[k]/ck));else print(TROUBLE); fi:fi: od:</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEjX2NGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtbkdGJDYkUSIxRicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSkmZXF1YWxzO0YnRjwvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkcvJSlzdHJldGNoeUdGRy8lKnN5bW1ldHJpY0dGRy8lKGxhcmdlb3BHRkcvJS5tb3ZhYmxlbGltaXRzR0ZHLyUnYWNjZW50R0ZHLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGVi1GIzY0LUYjNiYtRjk2JFEiMkYnRjwtRkI2LVExJkludmlzaWJsZVRpbWVzO0YnRjxGRUZIRkpGTEZORlBGUi9GVVEmMC4wZW1GJy9GWEZeby1JJW1zdXBHRiQ2JS1GLzYlUSV6ZXRhRicvRjNGR0Y8LUY5NiRRIzExRidGPC8lMXN1cGVyc2NyaXB0c2hpZnRHRkBGPC1GQjYtUScmcGx1cztGJ0Y8RkVGSEZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRicvRlhGYHAtRmFvNiVGY28tRjk2JFEiOUYnRjxGam9GXHAtRmFvNiVGY28tRjk2JFEiOEYnRjxGam9GXHAtRmFvNiVGY28tRjk2JFEiN0YnRjxGam9GXHAtRmFvNiVGY28tRjk2JFEiNkYnRjxGam9GXHAtRmFvNiVGY28tRjk2JFEiNUYnRjxGam9GXHAtRmFvNiVGY28tRjk2JFEiNEYnRjxGam9GXHAtRiM2JkZnbkZqbi1GYW82JUZjb0ZnbkZqb0Y8RlxwRmduRjxGPA==">LyZJI19jRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiNiMiIiIsNComIiIjRiopSSV6ZXRhR0YoIiM2RipGKiokKUYvIiIqRipGKiokKUYvIiIpRipGKiokKUYvIiIoRipGKiokKUYvIiInRipGKiokKUYvIiImRipGKiokKUYvIiIlRipGKiomRi1GKilGL0YtRipGKkYtRio=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEjX2NGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtbkdGJDYkUSIyRicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSkmZXF1YWxzO0YnRjwvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkcvJSlzdHJldGNoeUdGRy8lKnN5bW1ldHJpY0dGRy8lKGxhcmdlb3BHRkcvJS5tb3ZhYmxlbGltaXRzR0ZHLyUnYWNjZW50R0ZHLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGVi1GIzYvLUZCNi1RKiZ1bWludXMwO0YnRjxGRUZIRkpGTEZORlBGUi9GVVEsMC4yMjIyMjIyZW1GJy9GWEZpbi1JJW1zdXBHRiQ2JS1GLzYlUSV6ZXRhRicvRjNGR0Y8LUY5NiRRIzExRidGPC8lMXN1cGVyc2NyaXB0c2hpZnRHRkAtRkI2LVEoJm1pbnVzO0YnRjxGRUZIRkpGTEZORlBGUkZobkZqbi1GXG82JUZeby1GOTYkUSMxMEYnRjxGZW9GZ28tRlxvNiVGXm8tRjk2JFEiN0YnRjxGZW9GZ28tRlxvNiVGXm8tRjk2JFEiNkYnRjxGZW9GZ28tRlxvNiVGXm8tRjk2JFEiM0YnRjxGZW9GZ28tRlxvNiVGXm9GOEZlb0Y8Rjw=">LyZJI19jRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiNiMiIiMsLiokKUklemV0YUdGKCIjNiIiIiEiIiokKUYuIiM1RjBGMSokKUYuIiIoRjBGMSokKUYuIiInRjBGMSokKUYuIiIkRjBGMSokKUYuRipGMEYx</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEjX2NGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtbkdGJDYkUSIzRicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSkmZXF1YWxzO0YnRjwvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkcvJSlzdHJldGNoeUdGRy8lKnN5bW1ldHJpY0dGRy8lKGxhcmdlb3BHRkcvJS5tb3ZhYmxlbGltaXRzR0ZHLyUnYWNjZW50R0ZHLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGVi1GIzY0LUklbXN1cEdGJDYlLUYvNiVRJXpldGFGJy9GM0ZHRjwtRjk2JFEjMTFGJ0Y8LyUxc3VwZXJzY3JpcHRzaGlmdEdGQC1GQjYtUScmcGx1cztGJ0Y8RkVGSEZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRicvRlhGZW8tRmZuNiVGaG4tRjk2JFEjMTBGJ0Y8Rl9vRmFvLUZmbjYlRmhuLUY5NiRRIjlGJ0Y8Rl9vRmFvLUZmbjYlRmhuLUY5NiRRIjhGJ0Y8Rl9vRmFvLUZmbjYlRmhuLUY5NiRRIjVGJ0Y8Rl9vRmFvLUZmbjYlRmhuLUY5NiRRIjRGJ0Y8Rl9vRmFvLUZmbjYlRmhuRjhGX29GYW8tRmZuNiVGaG4tRjk2JFEiMkYnRjxGX29GYW8tRjk2JFEiMUYnRjxGPEY8">LyZJI19jRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiNiMiIiQsNCokKUklemV0YUdGKCIjNiIiIkYwKiQpRi4iIzVGMEYwKiQpRi4iIipGMEYwKiQpRi4iIilGMEYwKiQpRi4iIiZGMEYwKiQpRi4iIiVGMEYwKiQpRi5GKkYwRjAqJClGLiIiI0YwRjBGMEYw</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEjX2NGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtbkdGJDYkUSI0RicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSkmZXF1YWxzO0YnRjwvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkcvJSlzdHJldGNoeUdGRy8lKnN5bW1ldHJpY0dGRy8lKGxhcmdlb3BHRkcvJS5tb3ZhYmxlbGltaXRzR0ZHLyUnYWNjZW50R0ZHLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGVi1GIzYwLUklbXN1cEdGJDYlLUYvNiVRJXpldGFGJy9GM0ZHRjwtRjk2JFEjMTBGJ0Y8LyUxc3VwZXJzY3JpcHRzaGlmdEdGQC1GQjYtUSgmbWludXM7RidGPEZFRkhGSkZMRk5GUEZSL0ZVUSwwLjIyMjIyMjJlbUYnL0ZYRmVvLUZmbjYlRmhuLUY5NiRRIjlGJ0Y8Rl9vLUZCNi1RJyZwbHVzO0YnRjxGRUZIRkpGTEZORlBGUkZkb0Zmby1GZm42JUZobi1GOTYkUSI4RidGPEZfb0ZccC1GZm42JUZobi1GOTYkUSI1RidGPEZfb0Zhby1GZm42JUZobkY4Rl9vRlxwLUZmbjYlRmhuLUY5NiRRIjNGJ0Y8Rl9vRlxwLUY5NiRRIjFGJ0Y8RjxGPA==">LyZJI19jRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiNiMiIiUsMCokKUklemV0YUdGKCIjNSIiIkYwKiQpRi4iIipGMCEiIiokKUYuIiIpRjBGMCokKUYuIiImRjBGMCokKUYuRipGMEY0KiQpRi4iIiRGMEYwRjBGMA==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEjX2NGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtbkdGJDYkUSI1RicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSkmZXF1YWxzO0YnRjwvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkcvJSlzdHJldGNoeUdGRy8lKnN5bW1ldHJpY0dGRy8lKGxhcmdlb3BHRkcvJS5tb3ZhYmxlbGltaXRzR0ZHLyUnYWNjZW50R0ZHLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGVi1GIzYxLUZCNi1RKiZ1bWludXMwO0YnRjxGRUZIRkpGTEZORlBGUi9GVVEsMC4yMjIyMjIyZW1GJy9GWEZpbi1JJW1zdXBHRiQ2JS1GLzYlUSV6ZXRhRicvRjNGR0Y8LUY5NiRRIzEwRidGPC8lMXN1cGVyc2NyaXB0c2hpZnRHRkAtRkI2LVEoJm1pbnVzO0YnRjxGRUZIRkpGTEZORlBGUkZobkZqbi1GXG82JUZeby1GOTYkUSI5RidGPEZlb0Znby1GXG82JUZeby1GOTYkUSI3RidGPEZlb0Znby1GXG82JUZeby1GOTYkUSI2RidGPEZlb0Znby1GXG82JUZeby1GOTYkUSI0RidGPEZlb0Znby1GXG82JUZeby1GOTYkUSIzRidGPEZlb0Znby1GOTYkUSIyRidGPEY8Rjw=">LyZJI19jRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiNiMiIiYsMCokKUklemV0YUdGKCIjNSIiIiEiIiokKUYuIiIqRjBGMSokKUYuIiIoRjBGMSokKUYuIiInRjBGMSokKUYuIiIlRjBGMSokKUYuIiIkRjBGMSIiI0Yx</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEjX2NGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtbkdGJDYkUSI2RicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSkmZXF1YWxzO0YnRjwvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkcvJSlzdHJldGNoeUdGRy8lKnN5bW1ldHJpY0dGRy8lKGxhcmdlb3BHRkcvJS5tb3ZhYmxlbGltaXRzR0ZHLyUnYWNjZW50R0ZHLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGVi1GIzYnLUZCNi1RKiZ1bWludXMwO0YnRjxGRUZIRkpGTEZORlBGUi9GVVEsMC4yMjIyMjIyZW1GJy9GWEZpbi1JJW1zdXBHRiQ2JS1GLzYlUSV6ZXRhRicvRjNGR0Y8LUY5NiRRIjhGJ0Y8LyUxc3VwZXJzY3JpcHRzaGlmdEdGQC1GQjYtUSgmbWludXM7RidGPEZFRkhGSkZMRk5GUEZSRmhuRmpuLUZcbzYlRl5vLUY5NiRRIjVGJ0Y8RmVvRjxGPA==">LyZJI19jRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiNiMiIicsJiokKUklemV0YUdGKCIiKSIiIiEiIiokKUYuIiImRjBGMQ==</Equation></Text-field>
</Output>
</Group>
</Worksheet>